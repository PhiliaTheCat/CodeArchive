#include <iostream>

#ifndef __INCLUDE_COMPLEX__
    #define __INCLUDE_COMPLEX__

    class Complex // Formally, a + bi
    {
        private:
            double __a;
            double __b;

        public:
            Complex();
            Complex(double &a, double &b);
            Complex(Complex &tar);

            double mod(); // Module of a complex

            Complex &operator =(const Complex &tar);

            Complex operator +(Complex &sec);
            Complex operator +(double &sec);
            friend Complex operator +(double &fst, Complex &sec);

            Complex &operator +=(Complex &sec);
            Complex &operator +=(double &sec);

            Complex operator -();
            Complex operator -(Complex &sec);
            Complex operator -(double &sec);
            friend Complex operator -(double &fst, Complex &sec);

            Complex &operator -=(Complex &sec);
            Complex &operator -=(double &sec);

            Complex operator *(Complex &sec);
            Complex operator *(double &sec);
            friend Complex operator *(double &fst, Complex &sec);

            Complex &operator *=(Complex &sec);
            Complex &operator *=(double &sec);

            friend std::ostream &operator <<(std::ostream &tar, Complex &sample);            

            ~Complex();
    };
#endif
